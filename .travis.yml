sudo: required
language: node_js
node_js: "10.6.0"

script: skip

jobs:
  include:
    - stage: Lint
      script:
        - cd $TRAVIS_BUILD_DIR/client && npm install && npm run lint
        - cd $TRAVIS_BUILD_DIR/server && npm install && npm run lint

#    - stage: Audit
#      script:
#        - cd $TRAVIS_BUILD_DIR/client && npm audit --production
#        - cd $TRAVIS_BUILD_DIR/server && npm audit --production

    - stage: Tests
      script: echo "No tests at the moment"

#    - stage: Build and push image
#      services:
#        - docker
#      install: skip
#      before_script:
#        - docker build -t swapdex/explorer-server -f Dockerfile.server .
#        - docker build -t swapdex/explorer-client -f Dockerfile.client .
#      script:
#        - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
#        - docker tag swapdex/explorer-server swapdex/explorer-server:latest
#        - docker push swapdex/explorer-server:latest
#        - docker tag swapdex/explorer-server swapdex/explorer-server:$TRAVIS_BUILD_ID
#        - docker push swapdex/explorer-server:$TRAVIS_BUILD_ID
#        - docker tag swapdex/explorer-client swapdex/explorer-client:latest
#        - docker push swapdex/explorer-client:latest
#        - docker tag swapdex/explorer-client swapdex/explorer-client:$TRAVIS_BUILD_ID
#        - docker push swapdex/explorer-client:$TRAVIS_BUILD_ID
#
#    - stage: Build and push image (tagged)
#      services:
#        - docker
#      install: skip
#      before_script:
#        - docker build -t swapdex/explorer-server -f Dockerfile.server .
#        - docker build -t swapdex/explorer-client -f Dockerfile.client .
#      script:
#        - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
#        - docker tag swapdex/explorer-server swapdex/explorer-server:latest
#        - docker push swapdex/explorer-server:latest
#        - docker tag swapdex/explorer-server swapdex/explorer-server:testnet
#        - docker push swapdex/explorer-server:testnet
#        - docker tag swapdex/explorer-server swapdex/explorer-server:$TRAVIS_TAG
#        - docker push swapdex/explorer-server:$TRAVIS_TAG
#        - docker tag swapdex/explorer-client swapdex/explorer-client:latest
#        - docker push swapdex/explorer-client:latest
#        - docker tag swapdex/explorer-client swapdex/explorer-client:testnet
#        - docker push swapdex/explorer-client:testnet
#        - docker tag swapdex/explorer-client swapdex/explorer-client:$TRAVIS_TAG
#        - docker push swapdex/explorer-client:$TRAVIS_TAG

    - stage: Deploy in devnet
      install: skip
      before_script:
        - openssl enc -aes-256-cbc -d -in newTravis.pem.enc -K $encrypted_1abf86bccdee_key -iv $encrypted_1abf86bccdee_iv -out travis.pem
        - eval "$(ssh-agent -s)"
        - chmod 600 ./travis.pem
        - echo -e "Host $DEVNET_IP\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
        - ssh-add ./travis.pem
      script:
        - ssh -i ./travis.pem -l $DEVNET_USER_SSH $DEVNET_IP 'cd explorer && git pull origin devnet' > /dev/null
        - ssh -i ./travis.pem -l $DEVNET_USER_SSH $DEVNET_IP 'cd explorer/client && npm run build' > /dev/null
        - ssh -i ./travis.pem -l $DEVNET_USER_SSH $DEVNET_IP 'pm2 restart explorer-client explorer-crawler explorer-producer explorer-server explorer-trade-process' > /dev/null
#      after_success:
#        -  'curl -X POST --data-urlencode "payload={\"channel\": \"#deployments\", \"username\": \"Travis\", \"attachments\":[{\"fallback\":\"[devnet] Deployment succeeded\",\"pretext\":\"\",\"color\":\"good\",\"fields\":[{\"title\":\"[devnet] explorer\",\"value\":\"Deployment succeeded.\",\"short\":true}]}], \"icon_emoji\": \":male-construction-worker:\"}" $SLACK_DEPLOY_URL'
#      after_failure:
#        -  'curl -X POST --data-urlencode "payload={\"channel\": \"#deployments\", \"username\": \"Travis\", \"attachments\":[{\"fallback\":\"[devnet] Deployment failed\",\"pretext\":\"\",\"color\":\"danger\",\"fields\":[{\"title\":\"[devnet] explorer\",\"value\":\"Deployment failed.\",\"short\":false}]}], \"icon_emoji\": \":male-construction-worker:\"}" $SLACK_DEPLOY_URL'

    - stage: Deploy in testnet
      install: skip
      before_script:
        - openssl enc -aes-256-cbc -d -in newTravis.pem.enc -K $encrypted_1abf86bccdee_key -iv $encrypted_1abf86bccdee_iv -out travis.pem
        - eval "$(ssh-agent -s)"
        - chmod 600 ./travis.pem
        - echo -e "Host $TESTNET_IP\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
        - ssh-add ./travis.pem
      script:
        - ssh -i ./travis.pem -l $TESTNET_USER_SSH $TESTNET_IP 'cd scan && git pull origin swapdex' > /dev/null
        - ssh -i ./travis.pem -l $TESTNET_USER_SSH $TESTNET_IP 'cd scan/ && bash deploy.sh' > /dev/null
#      after_success:
#        -  'curl -X POST --data-urlencode "payload={\"channel\": \"#deployments\", \"username\": \"Travis\", \"attachments\":[{\"fallback\":\"[testnet] Deployment succeeded\",\"pretext\":\"\",\"color\":\"good\",\"fields\":[{\"title\":\"[testnet] explorer\",\"value\":\"Deployment succeeded.\",\"short\":true}]}], \"icon_emoji\": \":male-construction-worker:\"}" $SLACK_DEPLOY_URL'
#      after_failure:
#        -  'curl -X POST --data-urlencode "payload={\"channel\": \"#deployments\", \"username\": \"Travis\", \"attachments\":[{\"fallback\":\"[testnet] Deployment failed\",\"pretext\":\"\",\"color\":\"danger\",\"fields\":[{\"title\":\"[testnet] explorer\",\"value\":\"Deployment failed.\",\"short\":false}]}], \"icon_emoji\": \":male-construction-worker:\"}" $SLACK_DEPLOY_URL'

stages:
  - name: Lint
#  - name: Audit
  - name: Tests
#  - name: Build and push image
#    if: type != pull_request AND branch = master AND tag IS blank AND repo = smartdex/explorer
#  - name: Build and push image (tagged)
#    if: type != pull_request AND branch =~ ^v AND tag IS present AND repo = smartdex/explorer
  - name: Deploy in devnet
    if: type != pull_request AND branch = devnet AND repo = smartdex/explorer
  - name: Deploy in testnet
    if: type != pull_request AND branch = swapdex AND repo = smartdex/explorer
#    if: type != pull_request AND branch =~ ^v AND tag IS present AND repo = smartdex/explorer
